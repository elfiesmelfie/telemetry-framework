---
- name: Create temp directory for doing work in
  command: mktemp -d /tmp/sa-telemetry-ansible-XXXXXX
  register: mktemp
  changed_when: False
  check_mode: no
  tags: telemetry_init

- debug: msg="Created temp dir {{mktemp.stdout}}"

- name: Create local temp directory for doing work in
  local_action: command mktemp -d /tmp/sa-telemetry-ansible-XXXXXX
  register: local_tmp
  changed_when: False
  check_mode: no
  become: false

- set_fact:
    state: present
  when:
    - sa_telemetry_install | default(false) | bool

- set_fact:
    state: absent
  when:
    - not sa_telemetry_install | default(false) | bool

- name: Set SA telemetry project
  oc_project:
    state: present
    name: "{{ sa_telemetry_namespace }}"
    node_selector: "{{ sa_telemetry_nodeselector | default(null) }}"
  when: state == "present"

- include_tasks: telemetry_from_apb.yml
  when: sa_telemetry_via_apb

- name: Set list of roles for telemetry framework
  set_fact:
    sa_telemetry_prometheus_operator_namespace: "{{ sa_telemetry_namespace }}"
    sa_telemetry_grafana_namespace: "{{ sa_telemetry_namespace }}"
    sa_telemetry_prometheus_namespace: "{{ sa_telemetry_namespace }}"
    sa_telemetry_prometheusrules_namespace: "{{ sa_telemetry_namespace }}"
    sa_telemetry_consumers_namespace: "{{ sa_telemetry_namespace }}"
    sa_telemetry_qdr_namespace: "{{ sa_telemetry_namespace }}"
    sa_telemetry_alertmanager_namespace: "{{ sa_telemetry_namespace }}"
    sa_telemetry_ksm_namespace: "{{ sa_telemetry_namespace }}"
    role_list:
      - name: sa_telemetry_prometheus_operator
      - name: sa_telemetry_grafana
      - name: sa_telemetry_prometheus
      - name: sa_telemetry_prometheusrules
      - name: sa_telemetry_consumers
      - name: sa_telemetry_qdr
      - name: sa_telemetry_alertmanager
      - name: sa_telemetry_ksm

- name: Reverse order of role_list if we're deprovisioning
  set_fact:
    role_list: "{{ role_list | reverse | list }}"
  when: not sa_telemetry_install

- include_role:
    name: "{{ role.name }}"
  loop: "{{ role_list }}"
  loop_control:
    loop_var: role

- name: Cleaning up local temp dir
  local_action: file path="{{local_tmp.stdout}}" state=absent
  tags: sa_telemetry_cleanup
  changed_when: False
  become: false
